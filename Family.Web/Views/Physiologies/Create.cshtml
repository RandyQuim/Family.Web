@using Family.Web.Models
@model Family.Web.Models.PhysiologyDto

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <label id="headerLabel">Height</label>
        <hr />
        <div class="row">
            @Html.LabelFor(model => model.Feet, new { @class = "control-label col-md-4" })
            @Html.LabelFor(model => model.Inches, htmlAttributes: new { @class = "control-label col-md-4" })
        </div>
        <div class="row">
            <div class="col-md-4">
                @Html.EditorFor(model => model.Feet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Feet, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.Inches, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Inches, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-4", id = "headerLabel" })
        </div>
        <div class="row">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2", id = "headerLabel" })
        </div>
        <div class="row">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            @Html.LabelFor(model => model.IsLosing, htmlAttributes: new { @class = "control-label col-md-4", id = "headerLabel" })
        </div>
        <div class="row">
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsLosing)
                    @Html.ValidationMessageFor(model => model.IsLosing, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2", id = "headerLabel" })
        </div>
        <div class="row">
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Comment, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "GetUserPage", "Users", new { page = Model.Page }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
